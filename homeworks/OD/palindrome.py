# Алгоритм проверки, является ли строка палиндромом
# 1. Удаляем из строки все символы, не являющиеся буквами или цифрами
# 2. Приводим строку к нижнему регистру
# 3. Проверяем все позиции от начала до середины сроки
# 3.0 Для каждой позиции в строке
# 3.1 Сравниваем символ в этой позиции с символом на том же расстоянии от конца
# 3.1.1 Если эти символы не равны, строка не является палиндромом, прерываем выполнение и возвращаем False
# 3.2 Сравниваем позицию с полвиной длины строки
# 3.2.1 Если позиция больше половины длины, то все символы проверены, выходим из цикла и возвращаем True
# 3.3 Переходим к шагу 3.1 для следующей позиции

def is_palindrome(s):
# 1
    s = ''.join([ c for c in s if c.isalnum() ])
# 2
    s = s.lower()
# 3.0
    for i in range(len(s)//2):
# 3.1
        if s[i] != s[-i-1]:
# 3.1.1
            return False
# 3.2 & 3.3
# 3.2.1
    return True
# ==================== TESTS ===========================
import pytest

@pytest.mark.parametrize("s, expected",[
    ('level',True),
    ('hello',False),
    ('Racecar', True),
    ('Аргентина манит негра', True),
    ('',True),
    ('a', True),
    ('Oo', True),
    ('Oh!', False),
    ('Wow!', True),
    ('mem', True),
    ('the', False),
    ('x=2*x', True),
])

def test_check_with_param(s, expected):
    assert is_palindrome(s) == expected
